//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PosWebApp.PosWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PosWebService.IPosWebService")]
    public interface IPosWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/GetProducts", ReplyAction="http://tempuri.org/IPosWebService/GetProductsResponse")]
        DataAccess.Entity.Entities.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/GetProducts", ReplyAction="http://tempuri.org/IPosWebService/GetProductsResponse")]
        System.Threading.Tasks.Task<DataAccess.Entity.Entities.Product[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/GetCustomers", ReplyAction="http://tempuri.org/IPosWebService/GetCustomersResponse")]
        DataAccess.Entity.Entities.Customer[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/GetCustomers", ReplyAction="http://tempuri.org/IPosWebService/GetCustomersResponse")]
        System.Threading.Tasks.Task<DataAccess.Entity.Entities.Customer[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/GetEmployees", ReplyAction="http://tempuri.org/IPosWebService/GetEmployeesResponse")]
        DataAccess.Entity.Entities.Employee[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/GetEmployees", ReplyAction="http://tempuri.org/IPosWebService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<DataAccess.Entity.Entities.Employee[]> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/GetSuppliers", ReplyAction="http://tempuri.org/IPosWebService/GetSuppliersResponse")]
        DataAccess.Entity.Entities.Supplier[] GetSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/GetSuppliers", ReplyAction="http://tempuri.org/IPosWebService/GetSuppliersResponse")]
        System.Threading.Tasks.Task<DataAccess.Entity.Entities.Supplier[]> GetSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/UploadSale", ReplyAction="http://tempuri.org/IPosWebService/UploadSaleResponse")]
        void UploadSale(DataAccess.Entity.Entities.Sale sale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/UploadSale", ReplyAction="http://tempuri.org/IPosWebService/UploadSaleResponse")]
        System.Threading.Tasks.Task UploadSaleAsync(DataAccess.Entity.Entities.Sale sale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/UploadGrn", ReplyAction="http://tempuri.org/IPosWebService/UploadGrnResponse")]
        void UploadGrn(DataAccess.Entity.Entities.Grn grn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/UploadGrn", ReplyAction="http://tempuri.org/IPosWebService/UploadGrnResponse")]
        System.Threading.Tasks.Task UploadGrnAsync(DataAccess.Entity.Entities.Grn grn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/UploadStocktake", ReplyAction="http://tempuri.org/IPosWebService/UploadStocktakeResponse")]
        void UploadStocktake(DataAccess.Entity.Entities.Stocktake stocktake);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPosWebService/UploadStocktake", ReplyAction="http://tempuri.org/IPosWebService/UploadStocktakeResponse")]
        System.Threading.Tasks.Task UploadStocktakeAsync(DataAccess.Entity.Entities.Stocktake stocktake);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPosWebServiceChannel : PosWebApp.PosWebService.IPosWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PosWebServiceClient : System.ServiceModel.ClientBase<PosWebApp.PosWebService.IPosWebService>, PosWebApp.PosWebService.IPosWebService {
        
        public PosWebServiceClient() {
        }
        
        public PosWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PosWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PosWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PosWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataAccess.Entity.Entities.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<DataAccess.Entity.Entities.Product[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public DataAccess.Entity.Entities.Customer[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<DataAccess.Entity.Entities.Customer[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public DataAccess.Entity.Entities.Employee[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<DataAccess.Entity.Entities.Employee[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public DataAccess.Entity.Entities.Supplier[] GetSuppliers() {
            return base.Channel.GetSuppliers();
        }
        
        public System.Threading.Tasks.Task<DataAccess.Entity.Entities.Supplier[]> GetSuppliersAsync() {
            return base.Channel.GetSuppliersAsync();
        }
        
        public void UploadSale(DataAccess.Entity.Entities.Sale sale) {
            base.Channel.UploadSale(sale);
        }
        
        public System.Threading.Tasks.Task UploadSaleAsync(DataAccess.Entity.Entities.Sale sale) {
            return base.Channel.UploadSaleAsync(sale);
        }
        
        public void UploadGrn(DataAccess.Entity.Entities.Grn grn) {
            base.Channel.UploadGrn(grn);
        }
        
        public System.Threading.Tasks.Task UploadGrnAsync(DataAccess.Entity.Entities.Grn grn) {
            return base.Channel.UploadGrnAsync(grn);
        }
        
        public void UploadStocktake(DataAccess.Entity.Entities.Stocktake stocktake) {
            base.Channel.UploadStocktake(stocktake);
        }
        
        public System.Threading.Tasks.Task UploadStocktakeAsync(DataAccess.Entity.Entities.Stocktake stocktake) {
            return base.Channel.UploadStocktakeAsync(stocktake);
        }
    }
}
